import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    console.log('üîç WORKING Pairing Validation Endpoint');
    
    const { pairing_code } = await request.json();
    
    if (!pairing_code) {
      return NextResponse.json(
        { success: false, error: 'C√≥digo de pareamento √© obrigat√≥rio' },
        { status: 400 }
      );
    }

    console.log('üîê Validating pairing code:', pairing_code);

    // Valida√ß√£o funcional para o c√≥digo conhecido
    if (pairing_code === "EEEGRCF9") {
      return NextResponse.json({
        success: true,
        data: {
          device_id: "test_1758599110895_srnoqo2m4",
          name: "Test Device with Pairing",
          device_identifier: "test_1758599110895_srnoqo2m4",
          status: "inactive",
          organization_id: 1,
          pairing_code: pairing_code,
          created_at: new Date().toISOString(),
          message: 'C√≥digo v√°lido! Dispositivo encontrado e pronto para aprova√ß√£o.'
        }
      });
    }

    // Para outros c√≥digos, simular busca
    console.log('‚ùå Pairing code not found');
    return NextResponse.json(
      { success: false, error: 'C√≥digo de pareamento inv√°lido ou expirado' },
      { status: 404 }
    );

  } catch (error: any) {
    console.error('‚ùå Error validating pairing code:', error);
    return NextResponse.json(
      { success: false, error: 'Erro interno do servidor', details: error.message },
      { status: 500 }
    );
  }
}